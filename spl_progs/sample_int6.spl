[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1]*16) + 9] = 7;
alias userSP R0;
userSP = SP;
[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1]*16) + 13] = userSP;
SP = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1]*16) + 11]*512 - 1;
alias fileDesc R1;
alias retValAdd R2;
fileDesc = [([PTBR + 2*((userSP - 4) / 512)]*512) + ((userSP - 4) % 512)];
retValAdd = ([PTBR + 2*((userSP - 1) / 512)]*512) + ((userSP - 1) % 512);
alias wordAdd R3;
wordAdd = [([PTBR + 2*((userSP - 3) / 512)]*512) + ((userSP - 3) % 512)];
if(fileDesc != -1) then
	if((fileDesc < 0) || (fileDesc > 7)) then
		[retValAdd] = -1;
		[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1]*16) + 9] = 0;	
		SP = userSP;
		ireturn;
	endif;
	R4 = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1]*16) + 11]*512 + 496;
	if(([R4 + (fileDesc * 2)] == -1) || ([R4 + (fileDesc * 2)] != 0)) then
		[retValAdd] = -1;
		[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1]*16) + 9] = 0;	
		SP = userSP;
		ireturn;
	endif;
	R5 = [R4 + (fileDesc * 2) + 1];
	R6 = [OPEN_FILE_TABLE + (4*R5)];
	multipush(R0,R1,R2,R3,R4,R5,R6);
	R1 = 4;
	R2 = R6;
	R3 = [SYSTEM_STATUS_TABLE + 1];
	call MOD_0;
	R7 = R0;
	multipop(R0,R1,R2,R3,R4,R5,R6);
	if(R7 == -1) then
		[retValAdd] = -1;
		[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1]*16) + 9] = 0;	
		SP = userSP;
		ireturn;
	endif;
	R8 = [OPEN_FILE_TABLE + (4*R5) + 2];
	R9 = ([PTBR + 2*((wordAdd) / 512)]*512) + ((wordAdd) % 512);
	if(R6 == INODE_ROOT) then
		if(R8 == 480) then
			multipush(R0,R1,R2,R3,R4,R5,R6,R7,R8,R9);
			R1 = 5;
			R2 = R6;
			R3 = [SYSTEM_STATUS_TABLE + 1];
			call MOD_0;
			multipop(R0,R1,R2,R3,R4,R5,R6,R7,R8,R9);
			[retValAdd] = -2;
			[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1]*16) + 9] = 0;	
			SP = userSP;
			ireturn;
		endif;
		[R9] = [ROOT_FILE + R8];
		[OPEN_FILE_TABLE + (4*R5) + 2] = [OPEN_FILE_TABLE + (4*R5) + 2] + 1;
	else
		if(R8 == [INODE_TABLE + (R6*16) + 2]) then
			multipush(R0,R1,R2,R3,R4,R5,R6,R7,R8,R9);
			R1 = 5;
			R2 = R6;
			R3 = [SYSTEM_STATUS_TABLE + 1];
			call MOD_0;
			multipop(R0,R1,R2,R3,R4,R5,R6,R7,R8,R9);
			[retValAdd] = -2;
			[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1]*16) + 9] = 0;	
			SP = userSP;
			ireturn;
		endif;
		R10 = [OPEN_FILE_TABLE + (4*R5) + 2] / 512;
		R11 = [INODE_TABLE + (R6*16) + 8 + R10];
		R12 = [OPEN_FILE_TABLE + (4*R5) + 2] % 512;
		multipush(R0,R1,R2,R3,R4,R5,R6,R7,R8,R9,R10,R11,R12);
		R1 = 2;
		R2 = R11;
		R3 = R12;
		R4 = R9;
		call MOD_3;
		multipop(R0,R1,R2,R3,R4,R5,R6,R7,R8,R9,R10,R11,R12);
		[OPEN_FILE_TABLE + (4*R5) + 2] = [OPEN_FILE_TABLE + (4*R5) + 2] + 1;
	endif;
	multipush(R0,R1,R2,R3,R4,R5,R6,R7,R8,R9,R10,R11,R12);
	R1 = 5;
	R2 = R6;
	R3 = [SYSTEM_STATUS_TABLE + 1];
	call MOD_0;
	multipop(R0,R1,R2,R3,R4,R5,R6,R7,R8,R9,R10,R11,R12);
	[retValAdd] = 0;
	[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1]*16) + 9] = 0;	
	SP = userSP;
	ireturn;	
else
	multipush(R0,R1,R2,R3);
	R1 = 4;
	R2 = [SYSTEM_STATUS_TABLE + 1];
	call MOD_4;
	multipop (R0,R1,R2,R3);
	[retValAdd] = 0;
	[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1]*16) + 9] = 0;	
	SP = userSP;
	ireturn;
endif;