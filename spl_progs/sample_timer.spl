[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 13] = SP;
SP = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 11]*512 - 1;

backup;

if([SYSTEM_STATUS_TABLE + 1] != 0) then
	if([SYSTEM_STATUS_TABLE + 2] < MEM_LOW) then
		multipush(R1,R2);
		R1 = 1;
		R2 = [SYSTEM_STATUS_TABLE + 1];
		call MOD_6;
		multipop(R1,R2);
	else
		if([SYSTEM_STATUS_TABLE + 2] > MEM_HIGH) then
			multipush(R1,R2);
			R1 = 2;
			R2 = [SYSTEM_STATUS_TABLE + 1];
			call MOD_6;
			multipop(R1,R2);	
		endif;	
	endif;
endif;

[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 4] = READY;

R1 = 0;
while(R1 < 16) do
	[PROCESS_TABLE + (R1*16) + 0] = [PROCESS_TABLE + (R1*16) + 0] + 1;
	R1 = R1 + 1;
endwhile;

call MOD_5;

restore;
SP = [PROCESS_TABLE + ( [SYSTEM_STATUS_TABLE + 1] * 16) + 13];
[PROCESS_TABLE + ( [SYSTEM_STATUS_TABLE + 1] * 16) + 9] = 0;
ireturn;