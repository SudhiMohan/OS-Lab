alias userSP R1;
userSP = SP;
[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1]*16) + 13] = SP;
alias sysCallNum R2;
sysCallNum = [([PTBR + 2*((userSP - 5) / 512)]*512) + ((userSP - 5) % 512)];
alias retValAdd R3;
retValAdd = ([PTBR + 2*((userSP - 1) / 512)]*512) + ((userSP - 1) % 512);
SP = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1]*16) + 11]*512 - 1;
R6 = [([PTBR + 2*((userSP - 4) / 512)]*512) + ((userSP - 4) % 512)];
R4 = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1]*16) + 11]*512 + 496;
R12 = PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1]*16) + 9;
if(sysCallNum == 2) then
	print "open";
	[R12] = 2;
	R5 = 0;
	while(R5 < 8) do
		if([R4 + (2*R5)] == -1) then
			break;
		endif;
		R5 = R5 + 1;
	endwhile;
	if(R5 == 8) then
		[retValAdd] = -3;
		[R12] = 0;
		SP = userSP;
		ireturn;
	endif;
	multipush(R1,R2,R3,R4,R5,R6,R12);
	R1 = 3;
	R2 = R6;
	call MOD_3;
	R7 = R0;
	multipop(R1,R2,R3,R4,R5,R6,R12);
	print "dmod3";
	if((R7 == -2) || (R7 == -1)) then
		[retValAdd] = R7;
		[R12] = 0;
		SP = userSP;
		ireturn;
	endif;
	[R4 + (2*R5)] = FILE;
	[R4 + (2*R5) + 1] = R7;
	[retValAdd] = R5;
	[R12] = 0;
	SP = userSP;
	ireturn;
endif;

if(sysCallNum == 3) then
	[R12] = 3;
	if((R6 < 0) || (R6 > 7)) then
		[retValAdd] = -1;
		[R12] = 0;
		SP = userSP;
		ireturn;
	endif;
	if(([R4 + (2*R6)] == -1) || ([R4 + (2*R6)] != FILE)) then
		[retValAdd] = -1;
		[R12] = 0;
		SP = userSP;
		ireturn;
	endif;
	multipush(R1,R2,R3,R4,R5,R6,R12);
	R1 = 4;
	R2 = [R4 + (2*R6) + 1];
	call MOD_3;
	multipop(R1,R2,R3,R4,R5,R6,R12);
	[R4 + (2*R6)] = -1;
	[retValAdd] = 0;
	[R12] = 0;
	SP = userSP;
	ireturn;
endif;

if(sysCallNum == 6) then
	[R12] = 6;
	if((R6 < 0) || (R6 > 7)) then
		[retValAdd] = -1;
		[R12] = 0;
		SP = userSP;
		ireturn;
	endif;
	if(([R4 + (2*R6)] == -1) || ([R4 + (2*R6)] != FILE)) then
		[retValAdd] = -1;
		[R12] = 0;
		SP = userSP;
		ireturn;
	endif;
	R5 = [R4 + (2*R6) + 1];
	R7 = [OPEN_FILE_TABLE + (4*R5)];
	multipush(R1,R2,R3,R4,R5,R6,R7,R12);
	R1 = 4;
	R2 = R7;
	R3 = [SYSTEM_STATUS_TABLE + 1];
	call MOD_0;
	R8 = R0;
	multipop(R1,R2,R3,R4,R5,R6,R7,R12);
	if(R8 == -1) then
		[retValAdd] = -1;
		[R12] = 0;
		SP = userSP;
		ireturn;
	endif;
	R9 = OPEN_FILE_TABLE + (4*R5) + 2;
	R10 = [([PTBR + 2*((userSP - 3) / 512)]*512) + ((userSP - 3) % 512)];
	R11 = [INODE_TABLE + (R7*16) + 2];
	if(R7 == INODE_ROOT) then
		R11 = 480;
	endif;
	if(([R9] + R10) < 0) then
		multipush(R1,R2,R3,R4,R5,R6,R7,R8,R9,R10,R11,R12);
		R1 = 5;
		R2 = R7;
		R3 = [SYSTEM_STATUS_TABLE + 1];
		call MOD_0;
		multipop(R1,R2,R3,R4,R5,R6,R7,R8,R9,R10,R11,R12);
		[retValAdd] = -2;
		[R12] = 0;
		SP = userSP;
		ireturn;
	endif;
	if(R10 == 0) then
		[R9] = 0;
	else
		if(([R9] + R10) > R11) then
			[R9] = R11;
		else
			[R9] = [R9] + R10;	
		endif;	
	endif;
	multipush(R1,R2,R3,R4,R5,R6,R7,R8,R9,R10,R11,R12);
	R1 = 5;
	R2 = R7;
	R3 = [SYSTEM_STATUS_TABLE + 1];
	call MOD_0;
	multipop(R1,R2,R3,R4,R5,R6,R7,R8,R9,R10,R11,R12);
	[retValAdd] = 0;
	[R12] = 0;
	SP = userSP;
	ireturn;
endif;